knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "D://Hihi_Project/Sarahs_scripts/New assembly/LowCov alignments/50kb bins/Data")
library(magrittr)
library(ggplot2)
library(tidyverse)
# name columns
columns <- c("Contig_id", "Start", "End", "median", "mean", "count")
types <- list("f", "i", "i", "i", "n", "i")
# import data
female_to_female_50kb.cov <- read_delim("female_to_female_50kb.coverage", delim = " ", col_names = columns, col_types = types)
head(female_to_female_50kb.cov)
nrow(female_to_female_50kb.cov)
female_to_female_50kb.cov %>% group_by(Contig_id) %>% summarise(count = length(Contig_id))
#filter(female_to_female_50kb.cov, Contig_id == "Ncf_contig_282")
no_cov <- female_to_female_50kb.cov[!complete.cases(female_to_female_50kb.cov$mean), ] # windows with no coverage
#problems(no_cov)
#no_cov$Contig_id
nrow(no_cov) # number of windows with no cov
female_to_female_50kb.cov <- female_to_female_50kb.cov[complete.cases(female_to_female_50kb.cov$mean), ] # remove no coverage windows
female_to_female_50kb.cov %>% group_by(Contig_id) %>% summarise(count = length(Contig_id)) # how many contigs
# look at summary stats
fivenum(female_to_female_50kb.cov$mean)
fivenum(female_to_female_50kb.cov$median)
# plot the distribution of coverage per 50kb bins
#female_to_female_50kb.cov %>% ggplot(aes(x = median)) + geom_histogram(binwidth = 1) + theme_classic()
names_fai <- c("Contig_id", "Length", "Offset", "Line_bases", "Line_width")
female_genome_fai.df <- read_delim("./../../../female_consensus_renamed.fasta - Copy.fai", delim = " ", col_names = names_fai)
#filter(female_genome_fai.df, Contig_id == "Ncf_contig_275")
filter(female_genome_fai.df, Length < 5000)
# Make windows
female_to_female_50kb.cov %<>% mutate(window = End-Start)
# filter for windows that are 50Kb
# female_to_female_50kb.cov %<>% filter(window == 50000)
# filter for windows that are 50Kb
female_to_female_50kb.cov %<>% filter(window > 5000)
nrow(female_to_female_50kb.cov)
female_to_female_50kb.cov %>% group_by(Contig_id) %>% summarise(count = length(Contig_id)) # how many contigs
# complete cases
female_to_female_50kb.cov <- female_to_female_50kb.cov[complete.cases(female_to_female_50kb.cov$mean), ]
nrow(female_to_female_50kb.cov)
female_to_female_50kb.cov %>% group_by(Contig_id) %>% summarise(count = length(Contig_id)) # how many contigs
head(female_to_female_50kb.cov)
#filter(female_to_female_50kb.cov, Contig_id == "Ncf_contig_282")
View(female_genome_fai.df)
View(female_to_female_50kb.cov)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "D://Hihi_Project/Sarahs_scripts/New assembly/LowCov alignments/50kb bins/Data")
library(magrittr)
library(ggplot2)
library(tidyverse)
# name columns
columns <- c("Contig_id", "Start", "End", "median", "mean", "count")
types <- list("f", "i", "i", "i", "n", "i")
# import data
female_to_female_50kb.cov <- read_delim("female_to_female_50kb.coverage", delim = " ", col_names = columns, col_types = types)
head(female_to_female_50kb.cov)
nrow(female_to_female_50kb.cov)
female_to_female_50kb.cov %>% group_by(Contig_id) %>% summarise(count = length(Contig_id))
#filter(female_to_female_50kb.cov, Contig_id == "Ncf_contig_282")
no_cov <- female_to_female_50kb.cov[!complete.cases(female_to_female_50kb.cov$mean), ] # windows with no coverage
#problems(no_cov)
#no_cov$Contig_id
nrow(no_cov) # number of windows with no cov
female_to_female_50kb.cov <- female_to_female_50kb.cov[complete.cases(female_to_female_50kb.cov$mean), ] # remove no coverage windows
female_to_female_50kb.cov %>% group_by(Contig_id) %>% summarise(count = length(Contig_id)) # how many contigs
# look at summary stats
fivenum(female_to_female_50kb.cov$mean)
fivenum(female_to_female_50kb.cov$median)
# plot the distribution of coverage per 50kb bins
#female_to_female_50kb.cov %>% ggplot(aes(x = median)) + geom_histogram(binwidth = 1) + theme_classic()
names_fai <- c("Contig_id", "Length", "Offset", "Line_bases", "Line_width")
female_genome_fai.df <- read_delim("./../../../female_consensus_renamed.fasta - Copy.fai", delim = " ", col_names = names_fai)
#filter(female_genome_fai.df, Contig_id == "Ncf_contig_275")
filter(female_genome_fai.df, Length < 5000)
# Make windows
female_to_female_50kb.cov %<>% mutate(window = End-Start)
# filter for windows that are 50Kb
# female_to_female_50kb.cov %<>% filter(window == 50000)
# filter for windows that are 50Kb
female_to_female_50kb.cov %<>% filter(window > 5000)
nrow(female_to_female_50kb.cov)
female_to_female_50kb.cov %>% group_by(Contig_id) %>% summarise(count = length(Contig_id)) # how many contigs
# complete cases
female_to_female_50kb.cov <- female_to_female_50kb.cov[complete.cases(female_to_female_50kb.cov$mean), ]
nrow(female_to_female_50kb.cov)
female_to_female_50kb.cov %>% group_by(Contig_id) %>% summarise(count = length(Contig_id)) # how many contigs
head(female_to_female_50kb.cov)
# convert contig_id into a factor
#female_to_female_50kb.cov$Contig_id <- as.factor(female_to_female_50kb.cov$Contig_id)
# get the sum of the count
female_to_female_contig_lengths <- female_to_female_50kb.cov %>%
group_by(Contig_id) %>%
summarise(Sum_count = sum(count))
#check for empt obs
#female_to_female_contig_lengths[!complete.cases(female_to_female_contig_lengths), ]
# get the lengths of the contigs
#names_female_fai <- c("Contig_id", "Length", "Offset", "Line_bases", "Line_width")
#female_genome_fai.df <- read_delim("./../../../female_consensus_renamed.fasta - Copy.fai", delim = " ", col_names = FALSE)
female_to_female_contig_lengths <- right_join(female_to_female_contig_lengths, female_genome_fai.df[,c(1,2)], by = "Contig_id")
nrow(female_to_female_contig_lengths)
female_to_female_contig_lengths <- female_to_female_contig_lengths[complete.cases(female_to_female_contig_lengths), ]
nrow(female_to_female_contig_lengths)
female_to_female_contig_lengths %<>% mutate(Percent_cov = Sum_count/Length*100)
nrow(female_to_female_contig_lengths)
female_to_female_contig_lengths %<>% filter(Percent_cov >= 60)
nrow(female_to_female_contig_lengths)
# Join the coverage dataset to the filtered contig data
female_to_female_50kb.cov.df <- inner_join(female_to_female_50kb.cov, female_to_female_contig_lengths)
#View(female_to_female_50kb.cov.df)
#check for empt obs
#female_to_female_50kb.cov.df[!complete.cases(female_to_female_50kb.cov.df), ]
View(female_to_female_contig_lengths)
knitr::opts_chunk$set(echo = TRUE)
#blast_cols <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
Female_PAR_BLAST.df <- read_delim("./../PAR_hits_to_female_medaka2", delim = "\t", col_names = blast_cols)
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(ggplot2)
library(tidyverse)
#blast_cols <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
Female_PAR_BLAST.df <- read_delim("./../PAR_hits_to_female_medaka2", delim = "\t", col_names = blast_cols)
blast_cols <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
Female_PAR_BLAST.df <- read_delim("./../PAR_hits_to_female_medaka2", delim = "\t", col_names = blast_cols)
head(Female_PAR_BLAST.df)
low_e.df <- Female_PAR_BLAST.df %>% filter(evalue == 0)
low_e.df <- low_e.df %>% filter(length >= 1000)
low_e.df <- low_e.df %>% filter(pident >= 80)
#low_e.df %>%  group_by(sseqid) %>% summarise(total_length = sum(length))
low_e.df %>%  group_by(sseqid) %>% summarise(total_length = sum(length))
knitr::opts_chunk$set(echo = TRUE)
HighF_lowM.df <- read_delim("D:/Hihi_Project/Sarahs_scripts/New assembly/Methylation/Results/HighF_lowM_sites_whole_mutated_reduced_combined_reads_InnerJoin_140322.tsv", delim = "\t")
library(readr)
library(dplyr)
library(magrittr)
library(ggplot2)
HighF_lowM.df <- read_delim("D:/Hihi_Project/Sarahs_scripts/New assembly/Methylation/Results/HighF_lowM_sites_whole_mutated_reduced_combined_reads_InnerJoin_140322.tsv", delim = "\t")
HighM_and_lowF.df <- read_delim("D:/Hihi_Project/Sarahs_scripts/New assembly/Methylation/Results/HighM_lowF_sites_whole_mutated_reduced_combined_reads_InnerJoin_140322.tsv", delim = "\t")
View(HighF_lowM.df)
View(HighM_and_lowF.df)
View(HighF_lowM.df)
